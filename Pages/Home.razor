@page "/"
@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>

<div class="calcolatore-container">
    <div class="calcolatore-box">
        <h1>Calcolatore acqua per riso</h1>
        <EditForm Model="this">
            <div>
                <label for="tipoRiso">Tipo di riso:</label>
                <select id="tipoRiso" @bind="tipoRiso">
                    <option value="Arborio">Arborio</option>
                    <option value="Basmati">Basmati</option>
                    <option value="Carnaroli">Carnaroli</option>
                    <option value="Vialone Nano">Vialone Nano</option>
                </select>
            </div>
            <div>
                <label for="quantitaRiso">Quantità di riso (grammi):</label>
                <input id="quantitaRiso" type="number" @bind="quantitaRiso" min="1" />
            </div>
            <button type="button" @onclick="CalcolaAcqua">Calcola acqua</button>
        </EditForm>
        @if (acquaNecessaria > 0)
        {
            <p>Per cucinare @quantitaRiso g di riso @tipoRiso servono @acquaNecessaria ml di acqua.</p>
        }
    </div>
</div>

@if (risultatiSalvati.Any())
{
    <div class="risultati-tabella">
        <h2>Risultati salvati</h2>
        <table>
            <thead>
                <tr>
                    <th>Tipo</th>
                    <th>Quantità (g)</th>
                    <th>Acqua (ml)</th>
                    <th>Data</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var risultato in risultatiSalvati)
                {
                    <tr>
                        <td>@risultato.Tipo</td>
                        <td>@risultato.Quantita</td>
                        <td>@risultato.Acqua</td>
                        <td>@risultato.Data.ToShortDateString() @risultato.Data.ToShortTimeString()</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private string tipoRiso = "Arborio";
    private int quantitaRiso = 0;
    private int acquaNecessaria = 0;
    private List<RisultatoRiso> risultatiSalvati = new();

    private Dictionary<string, double> rapportoAcqua = new()
    {
        { "Arborio", 2.5 },
        { "Basmati", 2 },
        { "Carnaroli", 2.2 },
        { "Vialone Nano", 2.3 }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CaricaRisultati();
        }
    }

    private void CalcolaAcqua()
    {
        if (quantitaRiso > 0 && rapportoAcqua.ContainsKey(tipoRiso))
        {
            acquaNecessaria = (int)(quantitaRiso * rapportoAcqua[tipoRiso]);
            SalvaRisultato();
        }
        else
        {
            acquaNecessaria = 0;
        }
    }

    private async Task SalvaRisultato()
    {
        var risultato = new RisultatoRiso
        {
            Tipo = tipoRiso,
            Quantita = quantitaRiso,
            Acqua = acquaNecessaria,
            Data = DateTime.Now
        };

        // Chiama una funzione JavaScript per salvare i dati
        await JSRuntime.InvokeVoidAsync("salvaRisultatoInLocalStorage", risultato);

        // Aggiorna la tabella dopo il salvataggio
        await CaricaRisultati();
    }

    private async Task CaricaRisultati()
    {
        // Chiama una funzione JavaScript per leggere i dati
        var json = await JSRuntime.InvokeAsync<string>("caricaRisultatiDaLocalStorage");
        if (!string.IsNullOrEmpty(json))
        {
            risultatiSalvati = System.Text.Json.JsonSerializer.Deserialize<List<RisultatoRiso>>(json) ?? new();
        }
        else
        {
            risultatiSalvati = new();
        }
        StateHasChanged(); // Forza il re-render del componente per mostrare la tabella
    }

    public class RisultatoRiso
    {
        public string Tipo { get; set; } = string.Empty;
        public int Quantita { get; set; }
        public int Acqua { get; set; }
        public DateTime Data { get; set; }
    }
}